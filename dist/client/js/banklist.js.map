{"version":3,"sources":["data.js","date-currency.js","footer.js","header.js","movements.js","operation.js"],"names":["account1","owner","movements","interestRate","pin","movementsDates","currency","locale","account2","account3","accounts","updateUI","countBalance","currentAccount","dateToday","createMovements","countMoney","optionDate","hour","minute","day","month","year","weekday","formatCurrency","value","optionCurr","style","Intl","NumberFormat","format","formatDate","date","option","date1","Date","Different","Math","round","abs","DateTimeFormat","moneyIn","document","querySelector","moneyOut","interest","btnSort","timeOut","stat","countMoneyIn","filter","st","reduce","acc","num","countMoneyOut","textContent","countInterest","let","sort","addEventListener","timing","timer","tick","min","String","trunc","time","padStart","second","clearInterval","mainSection","classList","add","headName","setInterval","loginUser","loginPin","btnLogin","querySelectorAll","labelUser","labelPin","wrong","Audio","done","volume","correctLogin","close","createUserName","forEach","nickName","toLowerCase","split","map","n","join","balanceDate","e","preventDefault","find","play","remove","blur","balanceValue","movsContainer","balanceTotal","balance","bal","mov","innerHTML","movs","slice","a","b","ele","i","type","movsDate","html","insertAdjacentHTML","transferTo","transferAmount","transferBtn","labelsTranfer","loanAmount","loanBtn","labelLoan","closeConfirmUser","closeConfirmPin","closeLabelUser","closeLabelPin","closeBtn","color","accTransfer","push","toISOString","amount","floor","some","setTimeout","index","findIndex","splice"],"mappings":"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","file":"banklist.js","sourcesContent":["\"use strict\";\r\n\r\n// FAKE DATA\r\nconst account1 = {\r\n  owner: \"Jessica Davis\",\r\n  movements: [200, 455.23, -306.5, 25000, -642.21, -133.9, 79.97, 1300],\r\n  interestRate: 1.2, // %\r\n  pin: 2222,\r\n\r\n  movementsDates: [\r\n    \"2019-11-18T21:31:17.178Z\",\r\n    \"2019-12-23T07:42:02.383Z\",\r\n    \"2020-01-28T09:15:04.904Z\",\r\n    \"2020-04-01T10:17:24.185Z\",\r\n    \"2020-05-08T14:11:59.604Z\",\r\n    \"2020-07-26T17:01:17.194Z\",\r\n    \"2020-07-28T23:36:17.929Z\",\r\n    \"2020-08-01T10:51:36.790Z\",\r\n  ],\r\n  currency: \"EUR\",\r\n  locale: \"pt-PT\", // de-DE\r\n};\r\n\r\nconst account2 = {\r\n  owner: \"Ramy Sabry\",\r\n  movements: [5000, 3400, -150, -790, -3210, -1000, 8500, -30],\r\n  interestRate: 1.5,\r\n  pin: 1111,\r\n\r\n  movementsDates: [\r\n    \"2021-11-01T13:15:33.035Z\",\r\n    \"2021-11-30T09:48:16.867Z\",\r\n    \"2021-12-25T06:04:23.907Z\",\r\n    \"2022-01-25T14:18:46.235Z\",\r\n    \"2022-02-05T16:33:06.386Z\",\r\n    \"2022-09-04T14:43:26.374Z\",\r\n    \"2022-09-02T18:49:59.371Z\",\r\n    \"2022-09-06T09:01:20.894Z\",\r\n  ],\r\n  currency: \"USD\",\r\n  locale: \"en-US\",\r\n};\r\n\r\nconst account3 = {\r\n  owner: \"Jonas Schmedtmann\",\r\n  movements: [1000, 3400, 1500, -4000, -2000, 3500, -30],\r\n  interestRate: 1.7,\r\n  pin: 3333,\r\n\r\n  movementsDates: [\r\n    \"2021-11-01T13:15:33.035Z\",\r\n    \"2021-11-30T09:48:16.867Z\",\r\n    \"2021-12-25T06:04:23.907Z\",\r\n    \"2022-01-25T20:20:46.235Z\",\r\n    \"2022-02-05T16:33:06.386Z\",\r\n    \"2022-04-10T14:43:26.374Z\",\r\n    \"2022-06-25T18:49:59.371Z\",\r\n    \"2022-07-26T12:01:20.894Z\",\r\n  ],\r\n  currency: \"GBP\",\r\n  locale: \"en-UK\",\r\n};\r\n\r\n// ALL ACCOUNTS\r\nconst accounts = [account1, account2, account3];\r\n\r\n// function for update ui\r\nconst updateUI = function () {\r\n  // balance function\r\n  countBalance(currentAccount);\r\n  dateToday();\r\n\r\n  // movements fnction\r\n  createMovements(currentAccount);\r\n\r\n  // statistic function\r\n  countMoney(currentAccount);\r\n};\r\n","\"use strict\";\r\n\r\nconst optionDate = {\r\n  hour: \"numeric\",\r\n  minute: \"numeric\",\r\n  day: \"numeric\",\r\n  month: \"long\",\r\n  year: \"numeric\",\r\n  weekday: \"short\",\r\n};\r\n\r\n// function for formating date\r\n// function for formating currency\r\nconst formatCurrency = function (value) {\r\n  const optionCurr = {\r\n    style: \"currency\",\r\n    currency: currentAccount.currency,\r\n  };\r\n\r\n  return new Intl.NumberFormat(currentAccount.locale, optionCurr).format(value);\r\n};\r\n\r\nconst formatDate = function (date, option) {\r\n  // edit date\r\n  const dateDifferent = (date1, date2) => {\r\n    const result = Math.round(Math.abs(date2 - date1) / (1000 * 60 * 60 * 24));\r\n    return result;\r\n  };\r\n\r\n  const Different = dateDifferent(new Date(), date);\r\n\r\n  if (Different === 0) return `Today`;\r\n  if (Different === 1) return `Yesterday`;\r\n  if (Different <= 7) return `${Different} days ago`;\r\n\r\n  return new Intl.DateTimeFormat(currentAccount.locale, option).format(date);\r\n};\r\n","\"use strict\";\r\n\r\n// SELECTION\r\nconst moneyIn = document.querySelector(\".in\");\r\nconst moneyOut = document.querySelector(\".out\");\r\nconst interest = document.querySelector(\".interest\");\r\nconst btnSort = document.querySelector(\".btn-sort\");\r\nconst timeOut = document.querySelector(\".time-out\");\r\n\r\n// FUNCTION\r\n// function for count deposit, withdrawl and interest money\r\nconst countMoney = function (stat) {\r\n  // 1- money in\r\n  const countMoneyIn = stat.movements\r\n    .filter((st) => st > 0)\r\n    .reduce((acc, num) => acc + num, 0);\r\n  moneyIn.textContent = formatCurrency(countMoneyIn);\r\n\r\n  // 2- money out\r\n  const countMoneyOut = stat.movements\r\n    .filter((st) => st < 0)\r\n    .reduce((acc, num) => acc + num, 0);\r\n  moneyOut.textContent = formatCurrency(Math.abs(countMoneyOut));\r\n\r\n  // 3- interest\r\n  const countInterest = countMoneyIn * (stat.interestRate / 100);\r\n  interest.textContent = formatCurrency(countInterest);\r\n};\r\n\r\n// function for sot button\r\nlet sort = false;\r\nbtnSort.addEventListener(\"click\", function () {\r\n  createMovements(currentAccount, !sort);\r\n  sort = !sort;\r\n});\r\n\r\n// function for time out\r\nlet timing;\r\nconst timer = function () {\r\n  // I created this with seperate function in order to start by exactly 10:00 to avoid conflict\r\n  const tick = function () {\r\n    const min = String(Math.trunc(time / 60)).padStart(2, 0);\r\n    const second = String(time % 60).padStart(2, 0);\r\n\r\n    timeOut.textContent = `${min}:${second}`;\r\n\r\n    if (time === 0) {\r\n      clearInterval(timing);\r\n      mainSection.classList.add(\"hidden-op\");\r\n      headName.textContent = \"Log in to get started\";\r\n    }\r\n\r\n    time--;\r\n  };\r\n\r\n  // initlize this variable after clear untill it arrives 00:00\r\n  let time = 600;\r\n\r\n  tick();\r\n  const timing = setInterval(tick, 1000);\r\n\r\n  return timing;\r\n};\r\n","\"use strict\";\r\n\r\n// SELECTION\r\nconst headName = document.querySelector(\".start\");\r\nconst loginUser = document.querySelector(\".login--user\");\r\nconst loginPin = document.querySelector(\".login--pin\");\r\nconst btnLogin = document.querySelectorAll(\".btn\")[0];\r\nconst labelUser = document.querySelector(\".wrong-u\");\r\nconst labelPin = document.querySelector(\".wrong-p\");\r\nconst mainSection = document.querySelector(\".main\");\r\n//SOUNDS\r\nlet wrong = new Audio(\"sounds/wrong.wav\");\r\nwrong.volume = 0.5;\r\nlet done = new Audio(\"sounds/done.wav\");\r\ndone.volume = 0.5;\r\nlet correctLogin = new Audio(\"sounds/correct-login.mp3\");\r\ncorrectLogin.volume = 0.5;\r\nlet close = new Audio(\"sounds/close-account.mp3\");\r\nclose.volume = 0.5;\r\n\r\nlet currentAccount;\r\n\r\n// FUNCTION\r\n// function for heading name formating (start)\r\nconst createUserName = function () {\r\n  accounts.forEach((acc) => {\r\n    acc.nickName = acc.owner\r\n      .toLowerCase()\r\n      .split(\" \")\r\n      .map((n) => n[0])\r\n      .join(\"\");\r\n  });\r\n};\r\ncreateUserName(accounts);\r\n\r\n// function when click login\r\nbtnLogin.addEventListener(\"click\", function (e) {\r\n  e.preventDefault();\r\n\r\n  currentAccount = accounts.find((acc) => acc.nickName === loginUser.value);\r\n\r\n  if (currentAccount?.pin === +loginPin.value) {\r\n    correctLogin.play();\r\n    mainSection.classList.remove(\"hidden-op\");\r\n    labelPin.classList.add(\"hidden\");\r\n    // create welcome headName\r\n    headName.textContent = `Welcome back, ${\r\n      currentAccount.owner.split(\" \")[0]\r\n    }`;\r\n\r\n    // update UI\r\n    updateUI();\r\n\r\n    // timeout function\r\n    if (timing) clearInterval(timing);\r\n    timing = timer();\r\n  } else {\r\n    wrong.play();\r\n    labelPin.classList.remove(\"hidden\");\r\n  }\r\n\r\n  loginPin.value = loginUser.value = \"\";\r\n  loginPin.blur();\r\n});\r\n","\"use strict\";\r\n\r\n// SELECTION\r\nconst balanceDate = document.querySelector(\".date\");\r\nconst balanceValue = document.querySelector(\".balance-value\");\r\nconst movsContainer = document.querySelector(\".movement\");\r\n\r\n// 1- BALANCE\r\nlet balanceTotal;\r\n// function for count balance value\r\nconst countBalance = function (balance) {\r\n  balanceTotal = balance.movements.reduce((acc, bal) => acc + bal, 0);\r\n  balanceValue.textContent = formatCurrency(balanceTotal);\r\n};\r\n\r\n// function for add date for today\r\nconst dateToday = function () {\r\n  balanceDate.textContent = new Intl.DateTimeFormat(\r\n    currentAccount.locale,\r\n    optionDate\r\n  ).format(new Date());\r\n};\r\n\r\n// 2- MOVEMENTS\r\n// function for create movements\r\nconst createMovements = function (mov, sort = false) {\r\n  movsContainer.innerHTML = \" \";\r\n\r\n  const movs = sort\r\n    ? mov.movements.slice().sort((a, b) => a - b)\r\n    : mov.movements;\r\n\r\n  // create elements\r\n  movs.forEach((ele, i) => {\r\n    // const type = movs.map((mov) => (mov > 0 ? \"deposit\" : \"withdrawl\")); // NOTE its long solution\r\n    const type = ele > 0 ? \"deposit\" : \"withdrawl\"; // NOTE better solution\r\n\r\n    const movsDate = new Date(mov.movementsDates[i]);\r\n\r\n    const html = `\r\n    <div class=\"movement-row flex\">\r\n      <p class=\"movement-type movement-type--${type}\">${i + 1} ${type}</p>\r\n      <p class=\"movement-date\">${formatDate(movsDate)}</p>\r\n      <p class=\"movement-value\">${formatCurrency(ele)}</p>\r\n    </div>\r\n    `;\r\n\r\n    // add movements to page\r\n    movsContainer.insertAdjacentHTML(\"afterbegin\", html);\r\n  });\r\n};\r\n","\"use strict\";\r\n\r\n// SELECTION\r\nconst transferTo = document.querySelector(\".transfer-to\");\r\nconst transferAmount = document.querySelector(\".transfer-amount\");\r\nconst transferBtn = document.querySelectorAll(\".btn\")[1];\r\nconst labelsTranfer = document.querySelectorAll(\".label\");\r\nconst loanAmount = document.querySelector(\".loan-amount\");\r\nconst loanBtn = document.querySelectorAll(\".btn\")[2];\r\nconst labelLoan = document.querySelector(\".label-loan\");\r\nconst closeConfirmUser = document.querySelector(\".close-confirm-user\");\r\nconst closeConfirmPin = document.querySelector(\".close-confirm-pin\");\r\nconst closeLabelUser = document.querySelector(\".label-close-1\");\r\nconst closeLabelPin = document.querySelector(\".label-close-2\");\r\nconst closeBtn = document.querySelectorAll(\".btn\")[3];\r\n\r\n// NOTE TRANSFER OPERATION\r\ntransferBtn.addEventListener(\"click\", function (e) {\r\n  e.preventDefault();\r\n\r\n  /////// NOTE DRY concept does not apply here ////////\r\n  // reset labels when typing again\r\n  transferTo.addEventListener(\"input\", function () {\r\n    labelsTranfer[0].textContent = \"Transfer to\";\r\n    labelsTranfer[0].style.color = \"#333\";\r\n  });\r\n\r\n  transferAmount.addEventListener(\"input\", function () {\r\n    labelsTranfer[1].textContent = \"Amount\";\r\n    labelsTranfer[1].style.color = \"#333\";\r\n  });\r\n\r\n  const accTransfer = accounts.find((acc) => acc.nickName === transferTo.value);\r\n\r\n  // check if the account is exist\r\n  if (\r\n    +transferAmount.value > 0 &&\r\n    accTransfer &&\r\n    +balanceTotal > +transferAmount.value &&\r\n    accTransfer !== currentAccount &&\r\n    transferAmount.value !== \"\"\r\n  ) {\r\n    done.play();\r\n    // push amount and date to currentAccount movements\r\n    currentAccount.movements.push(-transferAmount.value);\r\n    currentAccount.movementsDates.push(new Date().toISOString());\r\n\r\n    // push amount and date to accTransfer movements\r\n    accTransfer.movements.push(+transferAmount.value);\r\n    accTransfer.movementsDates.push(new Date().toISOString());\r\n\r\n    // update UI\r\n    updateUI();\r\n\r\n    transferAmount.value = transferTo.value = \"\";\r\n    transferAmount.blur();\r\n\r\n    // reset timing\r\n    clearInterval(timing);\r\n    timing = timer();\r\n\r\n    /////// NOTE DRY concept does not apply here ////////\r\n  } else if (!accTransfer) {\r\n    wrong.play();\r\n    labelsTranfer[0].textContent = \"Wong user!\";\r\n    labelsTranfer[0].style.color = \"#f00\";\r\n  } else if (+balanceTotal < +transferAmount.value) {\r\n    wrong.play();\r\n    labelsTranfer[1].textContent = \"No money enough!\";\r\n    labelsTranfer[1].style.color = \"#f00\";\r\n  } else if (accTransfer === currentAccount) {\r\n    wrong.play();\r\n    labelsTranfer[0].textContent = \"Cuurent account!\";\r\n    labelsTranfer[0].style.color = \"#f00\";\r\n  } else if (+transferAmount.value <= 0) {\r\n    wrong.play();\r\n    labelsTranfer[1].textContent = \"Amount <= 0!\";\r\n    labelsTranfer[1].style.color = \"#f00\";\r\n  }\r\n});\r\n\r\n// NOTE LOAN OPERATION\r\nloanBtn.addEventListener(\"click\", function (e) {\r\n  e.preventDefault();\r\n\r\n  // reset labels when typing again\r\n  loanAmount.addEventListener(\"input\", function () {\r\n    labelLoan.textContent = \"Amount\";\r\n    labelLoan.style.color = \"#333\";\r\n  });\r\n\r\n  const amount = Math.floor(loanAmount.value);\r\n\r\n  if (\r\n    amount > 0 &&\r\n    currentAccount.movements.some((mov) => mov >= amount * 0.1)\r\n  ) {\r\n    done.play();\r\n    setTimeout(() => {\r\n      // push amount and date to currentAccount movements\r\n      currentAccount.movements.push(+amount);\r\n      currentAccount.movementsDates.push(new Date().toISOString());\r\n\r\n      // reset timing\r\n      clearInterval(timing);\r\n      timing = timer();\r\n\r\n      // updateUI\r\n      updateUI();\r\n    }, 3000);\r\n\r\n    loanAmount.value = \"\";\r\n    loanAmount.blur();\r\n  } else if (amount <= 0) {\r\n    wrong.play();\r\n    labelLoan.textContent = \"Wrong value!\";\r\n    labelLoan.style.color = \"#f00\";\r\n  }\r\n});\r\n\r\n// NOTE close account\r\ncloseBtn.addEventListener(\"click\", function (e) {\r\n  e.preventDefault();\r\n\r\n  /////// NOTE DRY concept does not apply here ////////\r\n  // reset labels when typing again\r\n  closeConfirmUser.addEventListener(\"input\", function () {\r\n    closeLabelUser.textContent = \"Confirm User\";\r\n    closeLabelUser.style.color = \"#333\";\r\n  });\r\n  // reset labels when typing again\r\n  closeConfirmPin.addEventListener(\"input\", function () {\r\n    closeLabelPin.textContent = \"Confirm PIN\";\r\n    closeLabelPin.style.color = \"#333\";\r\n  });\r\n\r\n  // check if the account is exist\r\n  if (\r\n    currentAccount.nickName === closeConfirmUser.value &&\r\n    currentAccount.pin === +closeConfirmPin.value\r\n  ) {\r\n    close.play();\r\n    const index = accounts.findIndex(\r\n      (acc) => acc.nickName === closeConfirmUser.value\r\n    );\r\n\r\n    // remove current account from accounts\r\n    accounts.splice(index, 1);\r\n\r\n    // hide UI\r\n    mainSection.classList.add(\"hidden-op\");\r\n\r\n    headName.textContent = \"Log in to get started\";\r\n\r\n    closeConfirmUser.value = closeConfirmPin.value = \"\";\r\n    closeConfirmPin.blur();\r\n\r\n    // reset timing\r\n    clearInterval(timing);\r\n    timing = timer();\r\n\r\n    /////// NOTE DRY concept does not apply here ////////\r\n  } else if (currentAccount.nickName !== closeConfirmUser.value) {\r\n    wrong.play();\r\n    closeLabelUser.textContent = \"Wrong user!\";\r\n    closeLabelUser.style.color = \"#f00\";\r\n  } else if (currentAccount.pin !== +closeConfirmPin.value) {\r\n    wrong.play();\r\n    closeLabelPin.textContent = \"Wrong PIN!\";\r\n    closeLabelPin.style.color = \"#f00\";\r\n  }\r\n});\r\n"]}